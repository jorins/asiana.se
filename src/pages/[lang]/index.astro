---
export { getStaticPaths } from '../../lib/util'

import { Image } from 'astro:assets'

import AnchorButton from '../../components/AnchorButton.astro'
import ButtonCollection from '../../components/ButtonCollection.astro'
import Countdown from '../../components/Countdown.astro'
import Footer from '../../components/Footer.astro'
import Layout from '../../layouts/Layout.astro';
import OpeningHours from '../../components/OpeningHours.astro'
import ProductTable from '../../components/ProductTable.astro'
import Section from '../../components/Section.astro'
import TopBar from '../../components/TopBar.astro'

import company from '../../content/company.json'
import { getAndRenderMarkdown } from '../../lib/util'
import { getLocaleFromUrl, Localisation } from '../../lib/i18n'

import logo from '../../assets/logo-white.svg'
import heroImage from '../../assets/pexels-christel-heimdal-jensen-628776-resize.jpg'
import foodImage from '../../assets/pexels-mdsnmdsnmdsn-3728295-crop.jpg'
import drinksImage from '../../assets/pexels-rdne-6412836-crop.jpg'

const locale = getLocaleFromUrl(Astro.url)
const l = new Localisation(locale)
const hero = await getAndRenderMarkdown(Astro.url, 'index/hero')
const food = await getAndRenderMarkdown(Astro.url, 'index/food')
const drinks = await getAndRenderMarkdown(Astro.url, 'index/drinks')
const location = await getAndRenderMarkdown(Astro.url, 'index/location')
const heroImageSrc = `url("${heroImage.src}")`
---

<Layout>
  <div id="content">
    <div class="hero-wrapper">
      <div class="hero">
        <TopBar />
        <div class="hero-content">
          <Image
            src={logo}
            alt="Asiana"
            class:list={["logo"]}
          />
          <Countdown />
          <hero.Content />
          <ButtonCollection >
            <AnchorButton
              href={company.orderLink}
              target="_blank"
              title={l.get('ui', 'nav.orderTooltip')}
              highlight
              grow='grow'
            >
              {l.get('ui', 'nav.order')}
            </AnchorButton>
            <AnchorButton href="#location" grow='grow'>{l.get('ui', 'nav.locate')}</AnchorButton>
          </ButtonCollection>
          <OpeningHours />
        </div>
      </div>
    </div>

    <Section
      id="food"
      image={foodImage}
      imageAlt={l.get('alt', 'food')}
    >
      <Fragment slot="head">
        <food.Content />
      </Fragment>

      <Fragment slot="body">
        <ProductTable group='food' />
      </Fragment>
    </Section>

    <Section
      id="drinks"
      image={drinksImage}
      imageAlt={l.get('alt', 'drinks')}
    >
      <Fragment slot="head">
        <drinks.Content />
      </Fragment>

      <Fragment slot="body">
        <ProductTable group='drinks' />
      </Fragment>
    </Section>

    <Section id="location" >
      <Fragment slot="head">
        <location.Content />
      </Fragment>
      <Fragment slot="body">
        <iframe
          class="map"
          src={company.mapEmbed}
          width="1200"
          height="600"
          allowfullscreen=""
          loading="lazy"
          referrerpolicy="no-referrer"
        ></iframe>
      </Fragment>
    </Section>

  </div>
  <Footer />
</Layout>

<style lang="scss" define:vars={{ heroImageSrc }}>
@use 'sass:color';
@use "../../styles/defs";

.hero-wrapper {
  min-height: 100vh;

  background-image: var(--heroImageSrc);
  background-attachment: local;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

.hero {
  box-sizing: border-box;
  min-height: 100vh;
  width: defs.$max_width;
  max-width: 100vw;

  margin: auto;
  padding: 0 4rem;

  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  align-items: stretch;

  background-color: color.change(defs.$background, $alpha: defs.$transparent-alpha);
}

.hero-content {
  flex-grow: 1;

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.doubling-block {
  margin: 0 auto;
  width: 100%;
  display: flex;

  justify-content: center;
  align-items: stretch;
  gap: 1rem;

  > div {
    margin: auto;
    flex-grow: 1;
    display: flex;
    align-items: flex-start;
    justify-content: center;
    min-width: 30rem;
    max-width: 100%;
  }

  @include defs.mobile {
    flex-direction: column;
  }

  @include defs.desktop {
    flex-direction: row;
    flex-wrap: wrap;
  }
}

.logo {
  max-width: 90vw;
  margin: 2rem;
}

.highlight {
  color: defs.$highlight;
  background-color: defs.$green;

  &:hover {
    background-color: color.adjust(defs.$green, $lightness: +10%, $saturation: -10%)
  }
}

.map {
  max-width: 90vw;
  border: none;
}

</style>
