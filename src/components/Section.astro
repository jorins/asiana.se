---
export type Props = {
  id: string
  containerColor?: string
  imageUrl: string,
  imageAlt: string,
  imageHref?: string,
  imageAlign?: 'left' | 'right'
}

const {
  id,
  containerColor = 'red',
  imageHref,
  imageUrl,
  imageAlt,
  imageAlign = 'left'
} = Astro.props
---

<div
  id={id}
  class:list={[
    'container',
    `color-${containerColor}`
  ]}
>
  <div class:list={[
    'inner',
    imageAlign === 'right' ? 'reverse' : null,
  ]}>
    <img
      class="image"
      width=400
      height=400
      src={imageUrl}
      alt={imageAlt}
      class={`align-${imageAlign}`}
    />

    <div class="content">
      <slot />
    </div>
  </div>
</div>

<style lang="scss">
@use "sass:color";
@use "../styles/defs.scss";

.container {
  &.color-red {
    background-color: defs.$red;
  }

  &.color-black {
    background-color: defs.$black;
  }
}

.inner {
  padding: 1rem;
  box-sizing: border-box;

  margin: auto;
  max-width: defs.$max-width;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  align-items: center;

  @include defs.desktop {
    flex-direction: row;

    &.reverse {
      flex-direction: row-reverse;
    }
  }
}

.content {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 1rem;

}

.image-container {
  display: block;
}

.image {
  // border-radius: defs.$border-radius;
  box-shadow: defs.$shadow;
  width: 100%;
  height: auto;

  @include defs.desktop {
    width: auto;
    height: 100%;
  }
} 
</style>
